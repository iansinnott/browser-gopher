name: Go Build

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    # Matrix strategy
    strategy:
      matrix:
        GOOS: [linux, darwin]
        GOARCH: [amd64, arm64]

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup env
        run: echo "VERSION=$(git describe --tags --always)" >> $GITHUB_ENV

      - name: Download modules
        run: go mod download

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $(git describe --tags --always))

      - name: Go build
        run: |
          CGO_ENABLED=0 GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH}} go build -ldflags "-X github.com/iansinnott/browser-gopher/cmd.Version=${{ env.VERSION }}" -o ./dist/browser-gopher-${{ env.VERSION }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/browser-gopher-${{ env.VERSION }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          asset_name: browser-gopher-${{ env.VERSION }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          asset_content_type: application/octet-stream
